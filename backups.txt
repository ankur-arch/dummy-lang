calc: lex.yy.c TypeUtils.c y.tab.c
	gcc -g lex.yy.c TypeUtils.c y.tab.c -o calc

lex.yy.c: y.tab.c calc.l
	lex calc.l

y.tab.c: calc.y
	yacc -d calc.y

TypeUtils.c: Types.h
	gcc TypeUtils.c -o TypeUtils 

clean: 
	rm -rf lex.yy.c y.tab.c y.tab.h calc calc.dSYM


/*
    struct Float v, v2, v3, v4;
    v.Name = "hasan";
    v.Type = "Float";
    v.value = 100;

    v2.Name = "hasan";
    v2.Type = "Float";
    v2.value = 30;

    v3.Name = "Mahasan";
    v3.Type = "Float";
    v3.value = 120;

    addFloatVariable(v);

    addFloatVariable(v3);
    float man = getFloatVariableValue("Mahasan");
    printf("The value of the search function is %f \n", man);
    printf("Hello world %s , value : %f \n %d \n", FloatVariableTable[0].Name, FloatVariableTable[0].value, FloatVariableStackCounter);
    updateFloatVariable("hasan",525);
    printf("Hello world %s , value : %f \n %d \n", FloatVariableTable[0].Name, FloatVariableTable[0].value ,FloatVariableStackCounter);


*/