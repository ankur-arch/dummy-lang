Grammar

    0 $accept: Start $end

    1 Start: M

    2 M: S ';'
    3  | M S ';'
    4  | CONTROL ';'
    5  | CONDITION ';'
    6  | M CONDITION ';'
    7  | PRINTER

    8 PRINTER: DISPLAY E ';'
    9        | M DISPLAY E ';'

   10 S: FLOAT VARNAME '=' E
   11  | VARNAME '=' E

   12 CONTROL: IF '(' CONDITION ')' THENSTMT
   13        | IF '(' CONDITION ')' THENSTMT ELSE OTHERSTMT

   14 THENSTMT: '{' RETURN E ';' '}'
   15         | '{' CONTROL '}'

   16 OTHERSTMT: '{' RETURN E ';' '}'

   17 CONDITION: CONDITION OR CONDITION
   18          | CONDITION AND CONDITION
   19          | NOT CONDITION
   20          | G

   21 G: G '<' G
   22  | G '>' G
   23  | G GTE G
   24  | G LTE G
   25  | G NET G
   26  | G EQ G
   27  | E

   28 E: E '+' F
   29  | E '-' F
   30  | F

   31 F: F '*' D
   32  | F '/' D
   33  | D

   34 D: '(' CONDITION ')'
   35  | '-' D
   36  | L

   37 L: FNUM
   38  | VARNAME


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 13 34
')' (41) 12 13 34
'*' (42) 31
'+' (43) 28
'-' (45) 29 35
'/' (47) 32
';' (59) 2 3 4 5 6 8 9 14 16
'<' (60) 21
'=' (61) 10 11
'>' (62) 22
'{' (123) 14 15 16
'}' (125) 14 15 16
error (256)
FLOAT (258) 10
VARNAME (259) 10 11 38
FNUM (260) 37
LTE (261) 24
GTE (262) 23
EQ (263) 26
NOT (264) 19
NET (265) 25
AND (266) 18
OR (267) 17
IF (268) 12 13
DISPLAY (269) 8 9
RETURN (270) 14 16
ELSE (271) 13


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
Start (30)
    on left: 1, on right: 0
M (31)
    on left: 2 3 4 5 6 7, on right: 1 3 6 9
PRINTER (32)
    on left: 8 9, on right: 7
S (33)
    on left: 10 11, on right: 2 3
CONTROL (34)
    on left: 12 13, on right: 4 15
THENSTMT (35)
    on left: 14 15, on right: 12 13
OTHERSTMT (36)
    on left: 16, on right: 13
CONDITION (37)
    on left: 17 18 19 20, on right: 5 6 12 13 17 18 19 34
G (38)
    on left: 21 22 23 24 25 26 27, on right: 20 21 22 23 24 25 26
E (39)
    on left: 28 29 30, on right: 8 9 10 11 14 16 27 28 29
F (40)
    on left: 31 32 33, on right: 28 29 30 31 32
D (41)
    on left: 34 35 36, on right: 31 32 33 35
L (42)
    on left: 37 38, on right: 36


State 0

    0 $accept: . Start $end

    FLOAT    shift, and go to state 1
    VARNAME  shift, and go to state 2
    FNUM     shift, and go to state 3
    NOT      shift, and go to state 4
    IF       shift, and go to state 5
    DISPLAY  shift, and go to state 6
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    Start      go to state 9
    M          go to state 10
    PRINTER    go to state 11
    S          go to state 12
    CONTROL    go to state 13
    CONDITION  go to state 14
    G          go to state 15
    E          go to state 16
    F          go to state 17
    D          go to state 18
    L          go to state 19


State 1

   10 S: FLOAT . VARNAME '=' E

    VARNAME  shift, and go to state 20


State 2

   11 S: VARNAME . '=' E
   38 L: VARNAME .

    '='  shift, and go to state 21

    $default  reduce using rule 38 (L)


State 3

   37 L: FNUM .

    $default  reduce using rule 37 (L)


State 4

   19 CONDITION: NOT . CONDITION

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    NOT      shift, and go to state 4
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    CONDITION  go to state 23
    G          go to state 15
    E          go to state 16
    F          go to state 17
    D          go to state 18
    L          go to state 19


State 5

   12 CONTROL: IF . '(' CONDITION ')' THENSTMT
   13        | IF . '(' CONDITION ')' THENSTMT ELSE OTHERSTMT

    '('  shift, and go to state 24


State 6

    8 PRINTER: DISPLAY . E ';'

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    E  go to state 25
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 7

   35 D: '-' . D

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    D  go to state 26
    L  go to state 19


State 8

   34 D: '(' . CONDITION ')'

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    NOT      shift, and go to state 4
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    CONDITION  go to state 27
    G          go to state 15
    E          go to state 16
    F          go to state 17
    D          go to state 18
    L          go to state 19


State 9

    0 $accept: Start . $end

    $end  shift, and go to state 28


State 10

    1 Start: M .
    3 M: M . S ';'
    6  | M . CONDITION ';'
    9 PRINTER: M . DISPLAY E ';'

    FLOAT    shift, and go to state 1
    VARNAME  shift, and go to state 2
    FNUM     shift, and go to state 3
    NOT      shift, and go to state 4
    DISPLAY  shift, and go to state 29
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    $default  reduce using rule 1 (Start)

    S          go to state 30
    CONDITION  go to state 31
    G          go to state 15
    E          go to state 16
    F          go to state 17
    D          go to state 18
    L          go to state 19


State 11

    7 M: PRINTER .

    $default  reduce using rule 7 (M)


State 12

    2 M: S . ';'

    ';'  shift, and go to state 32


State 13

    4 M: CONTROL . ';'

    ';'  shift, and go to state 33


State 14

    5 M: CONDITION . ';'
   17 CONDITION: CONDITION . OR CONDITION
   18          | CONDITION . AND CONDITION

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    ';'  shift, and go to state 36


State 15

   20 CONDITION: G .
   21 G: G . '<' G
   22  | G . '>' G
   23  | G . GTE G
   24  | G . LTE G
   25  | G . NET G
   26  | G . EQ G

    '<'  shift, and go to state 37
    '>'  shift, and go to state 38
    LTE  shift, and go to state 39
    GTE  shift, and go to state 40
    EQ   shift, and go to state 41
    NET  shift, and go to state 42

    $default  reduce using rule 20 (CONDITION)


State 16

   27 G: E .
   28 E: E . '+' F
   29  | E . '-' F

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 27 (G)


State 17

   30 E: F .
   31 F: F . '*' D
   32  | F . '/' D

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 30 (E)


State 18

   33 F: D .

    $default  reduce using rule 33 (F)


State 19

   36 D: L .

    $default  reduce using rule 36 (D)


State 20

   10 S: FLOAT VARNAME . '=' E

    '='  shift, and go to state 47


State 21

   11 S: VARNAME '=' . E

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    E  go to state 48
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 22

   38 L: VARNAME .

    $default  reduce using rule 38 (L)


State 23

   17 CONDITION: CONDITION . OR CONDITION
   18          | CONDITION . AND CONDITION
   19          | NOT CONDITION .

    $default  reduce using rule 19 (CONDITION)


State 24

   12 CONTROL: IF '(' . CONDITION ')' THENSTMT
   13        | IF '(' . CONDITION ')' THENSTMT ELSE OTHERSTMT

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    NOT      shift, and go to state 4
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    CONDITION  go to state 49
    G          go to state 15
    E          go to state 16
    F          go to state 17
    D          go to state 18
    L          go to state 19


State 25

    8 PRINTER: DISPLAY E . ';'
   28 E: E . '+' F
   29  | E . '-' F

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    ';'  shift, and go to state 50


State 26

   35 D: '-' D .

    $default  reduce using rule 35 (D)


State 27

   17 CONDITION: CONDITION . OR CONDITION
   18          | CONDITION . AND CONDITION
   34 D: '(' CONDITION . ')'

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    ')'  shift, and go to state 51


State 28

    0 $accept: Start $end .

    $default  accept


State 29

    9 PRINTER: M DISPLAY . E ';'

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    E  go to state 52
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 30

    3 M: M S . ';'

    ';'  shift, and go to state 53


State 31

    6 M: M CONDITION . ';'
   17 CONDITION: CONDITION . OR CONDITION
   18          | CONDITION . AND CONDITION

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    ';'  shift, and go to state 54


State 32

    2 M: S ';' .

    $default  reduce using rule 2 (M)


State 33

    4 M: CONTROL ';' .

    $default  reduce using rule 4 (M)


State 34

   18 CONDITION: CONDITION AND . CONDITION

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    NOT      shift, and go to state 4
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    CONDITION  go to state 55
    G          go to state 15
    E          go to state 16
    F          go to state 17
    D          go to state 18
    L          go to state 19


State 35

   17 CONDITION: CONDITION OR . CONDITION

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    NOT      shift, and go to state 4
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    CONDITION  go to state 56
    G          go to state 15
    E          go to state 16
    F          go to state 17
    D          go to state 18
    L          go to state 19


State 36

    5 M: CONDITION ';' .

    $default  reduce using rule 5 (M)


State 37

   21 G: G '<' . G

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    G  go to state 57
    E  go to state 16
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 38

   22 G: G '>' . G

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    G  go to state 58
    E  go to state 16
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 39

   24 G: G LTE . G

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    G  go to state 59
    E  go to state 16
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 40

   23 G: G GTE . G

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    G  go to state 60
    E  go to state 16
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 41

   26 G: G EQ . G

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    G  go to state 61
    E  go to state 16
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 42

   25 G: G NET . G

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    G  go to state 62
    E  go to state 16
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 43

   28 E: E '+' . F

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    F  go to state 63
    D  go to state 18
    L  go to state 19


State 44

   29 E: E '-' . F

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    F  go to state 64
    D  go to state 18
    L  go to state 19


State 45

   31 F: F '*' . D

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    D  go to state 65
    L  go to state 19


State 46

   32 F: F '/' . D

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    D  go to state 66
    L  go to state 19


State 47

   10 S: FLOAT VARNAME '=' . E

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    E  go to state 67
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 48

   11 S: VARNAME '=' E .
   28 E: E . '+' F
   29  | E . '-' F

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 11 (S)


State 49

   12 CONTROL: IF '(' CONDITION . ')' THENSTMT
   13        | IF '(' CONDITION . ')' THENSTMT ELSE OTHERSTMT
   17 CONDITION: CONDITION . OR CONDITION
   18          | CONDITION . AND CONDITION

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    ')'  shift, and go to state 68


State 50

    8 PRINTER: DISPLAY E ';' .

    $default  reduce using rule 8 (PRINTER)


State 51

   34 D: '(' CONDITION ')' .

    $default  reduce using rule 34 (D)


State 52

    9 PRINTER: M DISPLAY E . ';'
   28 E: E . '+' F
   29  | E . '-' F

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    ';'  shift, and go to state 69


State 53

    3 M: M S ';' .

    $default  reduce using rule 3 (M)


State 54

    6 M: M CONDITION ';' .

    $default  reduce using rule 6 (M)


State 55

   17 CONDITION: CONDITION . OR CONDITION
   18          | CONDITION . AND CONDITION
   18          | CONDITION AND CONDITION .

    $default  reduce using rule 18 (CONDITION)


State 56

   17 CONDITION: CONDITION . OR CONDITION
   17          | CONDITION OR CONDITION .
   18          | CONDITION . AND CONDITION

    AND  shift, and go to state 34

    $default  reduce using rule 17 (CONDITION)


State 57

   21 G: G . '<' G
   21  | G '<' G .
   22  | G . '>' G
   23  | G . GTE G
   24  | G . LTE G
   25  | G . NET G
   26  | G . EQ G

    $default  reduce using rule 21 (G)


State 58

   21 G: G . '<' G
   22  | G . '>' G
   22  | G '>' G .
   23  | G . GTE G
   24  | G . LTE G
   25  | G . NET G
   26  | G . EQ G

    $default  reduce using rule 22 (G)


State 59

   21 G: G . '<' G
   22  | G . '>' G
   23  | G . GTE G
   24  | G . LTE G
   24  | G LTE G .
   25  | G . NET G
   26  | G . EQ G

    $default  reduce using rule 24 (G)


State 60

   21 G: G . '<' G
   22  | G . '>' G
   23  | G . GTE G
   23  | G GTE G .
   24  | G . LTE G
   25  | G . NET G
   26  | G . EQ G

    $default  reduce using rule 23 (G)


State 61

   21 G: G . '<' G
   22  | G . '>' G
   23  | G . GTE G
   24  | G . LTE G
   25  | G . NET G
   26  | G . EQ G
   26  | G EQ G .

    $default  reduce using rule 26 (G)


State 62

   21 G: G . '<' G
   22  | G . '>' G
   23  | G . GTE G
   24  | G . LTE G
   25  | G . NET G
   25  | G NET G .
   26  | G . EQ G

    $default  reduce using rule 25 (G)


State 63

   28 E: E '+' F .
   31 F: F . '*' D
   32  | F . '/' D

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 28 (E)


State 64

   29 E: E '-' F .
   31 F: F . '*' D
   32  | F . '/' D

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 29 (E)


State 65

   31 F: F '*' D .

    $default  reduce using rule 31 (F)


State 66

   32 F: F '/' D .

    $default  reduce using rule 32 (F)


State 67

   10 S: FLOAT VARNAME '=' E .
   28 E: E . '+' F
   29  | E . '-' F

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44

    $default  reduce using rule 10 (S)


State 68

   12 CONTROL: IF '(' CONDITION ')' . THENSTMT
   13        | IF '(' CONDITION ')' . THENSTMT ELSE OTHERSTMT

    '{'  shift, and go to state 70

    THENSTMT  go to state 71


State 69

    9 PRINTER: M DISPLAY E ';' .

    $default  reduce using rule 9 (PRINTER)


State 70

   14 THENSTMT: '{' . RETURN E ';' '}'
   15         | '{' . CONTROL '}'

    IF      shift, and go to state 5
    RETURN  shift, and go to state 72

    CONTROL  go to state 73


State 71

   12 CONTROL: IF '(' CONDITION ')' THENSTMT .
   13        | IF '(' CONDITION ')' THENSTMT . ELSE OTHERSTMT

    ELSE  shift, and go to state 74

    $default  reduce using rule 12 (CONTROL)


State 72

   14 THENSTMT: '{' RETURN . E ';' '}'

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    E  go to state 75
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 73

   15 THENSTMT: '{' CONTROL . '}'

    '}'  shift, and go to state 76


State 74

   13 CONTROL: IF '(' CONDITION ')' THENSTMT ELSE . OTHERSTMT

    '{'  shift, and go to state 77

    OTHERSTMT  go to state 78


State 75

   14 THENSTMT: '{' RETURN E . ';' '}'
   28 E: E . '+' F
   29  | E . '-' F

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    ';'  shift, and go to state 79


State 76

   15 THENSTMT: '{' CONTROL '}' .

    $default  reduce using rule 15 (THENSTMT)


State 77

   16 OTHERSTMT: '{' . RETURN E ';' '}'

    RETURN  shift, and go to state 80


State 78

   13 CONTROL: IF '(' CONDITION ')' THENSTMT ELSE OTHERSTMT .

    $default  reduce using rule 13 (CONTROL)


State 79

   14 THENSTMT: '{' RETURN E ';' . '}'

    '}'  shift, and go to state 81


State 80

   16 OTHERSTMT: '{' RETURN . E ';' '}'

    VARNAME  shift, and go to state 22
    FNUM     shift, and go to state 3
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    E  go to state 82
    F  go to state 17
    D  go to state 18
    L  go to state 19


State 81

   14 THENSTMT: '{' RETURN E ';' '}' .

    $default  reduce using rule 14 (THENSTMT)


State 82

   16 OTHERSTMT: '{' RETURN E . ';' '}'
   28 E: E . '+' F
   29  | E . '-' F

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    ';'  shift, and go to state 83


State 83

   16 OTHERSTMT: '{' RETURN E ';' . '}'

    '}'  shift, and go to state 84


State 84

   16 OTHERSTMT: '{' RETURN E ';' '}' .

    $default  reduce using rule 16 (OTHERSTMT)
